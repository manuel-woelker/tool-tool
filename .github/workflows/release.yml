name: Release Build


on:
  push:
    tags:
      - 'v*'
env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get Tag Name
        id: get_tag
        run: echo "tag_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          release_name: Release ${{ steps.get_tag.outputs.tag_name }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build on Linux
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Artifact
        run: |
          mkdir -p dist
          echo "This is a Linux build artifact." > dist/linux-artifact.txt

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/linux-artifact.txt
          asset_name: linux-artifact.txt
          asset_content_type: text/plain

  build-windows:
    name: Build on Windows
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Artifact
        run: |
          mkdir dist
          echo "This is a Windows build artifact." > dist/windows-artifact.txt

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./dist/windows-artifact.txt
          asset_name: windows-artifact.txt
          asset_content_type: text/plain

  build-release-linux:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.90.0
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8
      - name: Cargo version
        run: cargo --version
      - name: Run tests
        run: cargo test --all-features --locked
      - name: Build release binary
        shell: bash
        run: ./scripts/build_release.sh

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/tool-tool
          asset_name: tool-tool
          asset_content_type: application/binary

  build-release-windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.90.0
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.8
      - name: Cargo version
        run: cargo --version
      - name: Run tests
        run: cargo test --all-features --locked
      - name: Build release binary
        shell: bash
        run: ./scripts/build_release.sh

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/tool-tool.exe
          asset_name: tool-tool.exe
          asset_content_type: application/binary